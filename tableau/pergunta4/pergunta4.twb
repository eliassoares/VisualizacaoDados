<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='pergunta4' inline='true' name='textscan.0rny50v08jfq4118wckdu1n53tdn' version='9.3'>
      <connection class='textscan' directory='/Users/ghapereira/vagrant/visdados/crawlerDataViva/file_converters' filename='pergunta4.csv' password='' server=''>
        <relation name='pergunta4.csv' table='[pergunta4#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Curso' ordinal='0' />
            <column datatype='integer' name='Entrantes' ordinal='1' />
            <column datatype='integer' name='Graduandos' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Curso</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Curso]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Curso</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entrantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entrantes]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Entrantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduandos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Graduandos]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Graduandos</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='INDEX()' datatype='integer' name='[Calculation_115545492808560642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/lucas/Documents/visualizacao de dados/VisualizacaoDados-TP1/tableau/pergunta4/pergunta4.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 05:39:26 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2016-05-14 17:39:26.028' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Curso</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Curso]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Curso</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta4.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Administração de agroindústria&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Saúde pública&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Gestão estratégica de empresas&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entrantes</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Entrantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entrantes</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta4.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>232.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.199999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>96</statistic>
                <statistic aggregation='Stdev' datatype='real'>32.282778346632092</statistic>
                <statistic aggregation='StdevP' datatype='real'>30.626132632116644</statistic>
                <statistic aggregation='Var' datatype='real'>1042.1777777777777</statistic>
                <statistic aggregation='VarP' datatype='real'>937.96000000000004</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14762.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Graduandos</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Graduandos]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Graduandos</remote-alias>
              <ordinal>2</ordinal>
              <family>pergunta4.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>871.0</statistic>
                <statistic aggregation='Avg' datatype='real'>87.099999999999994</statistic>
                <statistic aggregation='Min' datatype='integer'>15</statistic>
                <statistic aggregation='Max' datatype='integer'>184</statistic>
                <statistic aggregation='Stdev' datatype='real'>68.539445252756138</statistic>
                <statistic aggregation='StdevP' datatype='real'>65.022226968937318</statistic>
                <statistic aggregation='Var' datatype='real'>4697.6555555555551</statistic>
                <statistic aggregation='VarP' datatype='real'>4227.8900000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>118143.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.448077' measure-ordering='alphabetic' measure-percentage='0.551923' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Entrantes:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Graduandos:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='pergunta4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>10 Cursos com menor número de Entrantes/Graduandos</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta4' name='textscan.0rny50v08jfq4118wckdu1n53tdn' />
          </datasources>
          <datasource-dependencies datasource='textscan.0rny50v08jfq4118wckdu1n53tdn'>
            <column datatype='string' name='[Curso]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
            <column-instance column='[Curso]' derivation='None' name='[none:Curso:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Entrantes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Graduandos:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gestão estratégica de empresas&quot;</bucket>
              <bucket>&quot;Gestão da produção&quot;</bucket>
              <bucket>&quot;Gestão de serviços&quot;</bucket>
              <bucket>&quot;Materiais de construção (produção e utilização)&quot;</bucket>
              <bucket>&quot;Administração de agroindústria&quot;</bucket>
              <bucket>&quot;Inspeção escolar&quot;</bucket>
              <bucket>&quot;Política social&quot;</bucket>
              <bucket>&quot;Gestão de recursos de informática&quot;</bucket>
              <bucket>&quot;Saúde pública&quot;</bucket>
              <bucket>&quot;Formação de professor de pré-escola&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0rny50v08jfq4118wckdu1n53tdn].[Multiple Values]</rows>
        <cols>([textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk] / [textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='pergunta4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]</field>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Calculation_115545492808470529:qk]</field>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='pergunta4' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOzdd3hUVf7H8fedmSST3nvvhQRCCL2DIAiioAJ2Xcuqu/vTdbu77rrNLequ
      rr2tHRFB6YTee28BEiAhIb0nk0y/9/dHQlGRBSWAzvf1PD6Pmblz5pzLvfO55Zx7FE3TNIQQ
      Qrgc3ZWugBBCiCtDAkAIIVyUBIAQQrgoCQAhhHBREgBCCOGiJACEEMJFSQAIIYSLkgAQQggX
      ZbjSFRBCiO8ah91KVUU59U0mImLiCA8JRKcoV7paF02RkcBCCHHhNIeZV//9T8pbISEmjAP7
      DzL57kcY1TfrSlftoskZgBBCXIS9m1ZQZvPn90/+BC83HUf3baRg3yEyQuFYncbQvj3Ys2k1
      nrGZVBzZTV1tLe7B8UQbLewqLMEnKJIbbpiAs7WGRYsKaLVqDBh+Db0zEy97W+QegBBCXITq
      k6X0yM7Fy10PikJyzyH86I6baKguYd+howAUH9hFWW0DOzYupc7qSWKoO+/OWkzfwcNQG4+z
      v7CUd157GSUkiUF56fz3peepabdf9rZIAAghxEXQGQzYHc7TfztsHRQVHUMDTt0FOH07QPPg
      2gnX0is3n5yEYN5+/TUaHN6E+WhUNVkZP24UvfoNpme0N6VVpsvdFAkAIYS4GBlZPdm7eT0V
      9S04HDa2LJ/HW3MKUFAwmc04nXYam1u7llYwKApOczMhKfk8+eQTBBuaKdiyHTeDRk1dM7aO
      VqqaTHh7uV/2tsg9ACGEuAhxPfozIvcgf33qSfx9jJhsbjz4ox8TbTRR9eG/+d3v9mBpbyMJ
      BRQ9mgJ6oy8lu9ayfdsmbOZ2br7vZvpFefPqP/+Ah5uBkMR+ZER6X/a2SC8gIYT4Bpx2O1a7
      A6On8XQXUKfTgc3uxOjhwVd6hWoqFosVvZs7bgY9AHabDacKRuPlP/oHCQAhhHBZcg9ACCFc
      lASAEEK4qKs6AFzx6pSqqle6Cpedq7VZ0zSX27alzVenqzoAWlparnQVLrvy8vIrXYXLztXa
      bDKZaGpqutLVuKxaW1tdbn9uamqira3tSlfjvK7qABBCCNF9XCIAyo8eZNbHH/Hfd95l2dot
      2JwXflrmtHVQdrIWgJNHD7B85XoO7t1Bae3Vneziu8lmaWHhvHkUrFyNxanRWlfFwvnzWLhy
      M+o5LydolJecwHEBm/SW1YvZf/irZ1tOWwerly6gpPzCz0q2r1vKnoOlF7z8l5Ue3Mu8+Qup
      a7N95T1rSw0LFxbQ2GI+bxllxw6ybO0m7OfYnx3mNlYULKS86txnHc31NTS1nb/8r2NqqGLZ
      0uUcOXSAnYdKv1EZV4vveQBoHN29jt8+9TRb9xXRUFPO+6+/wOszFqFqndfobDYbqnpmA3I6
      Hdhs9tPX717+6y9YuHorAHv27aHq5DFmzV2KpnR+RtO0rr68rnUdW3QPu7mZ2R9+yPvvfUxZ
      VQuFu9by/gcfMnvhSjQNNFXFZrWdvm+yY9lM/vLsy5i7nkzgsNtxnPWYAgDV6cThdHL00D7K
      qjt/5M9s56A6HRTu30NNc0fnew4HNruDc+WN09FZ/qYVC9my5+jp8k/tMxdEc/DJjDf58IP3
      WbpmO6c/1bUvWZprmTnrM+q7AuDUPqZpWmdbutrXUl3J/kNHOLX7aqqKzW5HA1SHlQN799DQ
      Zuks127D4XAA0F5TzC8e/wXHqhpOV8nhsKOq2unfBKfzzP6sqSpWq+30+ig5VkhZVQ1z5nxG
      q9l6uo4Oux2H84vr/mr3vR4JrGmweNF8ghJy+eOTj+HlpmPz6iWY3cKwdrQw4+3X2FN8ksDw
      eH748A/pOLGbt2bMw+Z0EhaXwfUD09hWVI/uxALyeqVRV1bJ7pIKNE3h6LESIo1RvPrKaxwr
      r8HLL5R7fvgQWfHhV7rZ4jtPh2pr4fDxE9TuP4TOoAcFWmvLePWV16hubsfN058HHnmQ+fML
      aGmw8+6Hn9MnUuXTxWtx6o3cdNu99Esy8qs/voSXUYdnRDrhtlY8bTaKdq/njfdnY3NqhCZk
      85N7p2Bqa8HmcLJn83I++nQxDlUlMimPR390Fx76zhFNxXs38sZ7s1DdfbA1tdIjDapLCnnt
      jXdoMFnJ7j+ae6Zfj4fh/MeVdccPcOBEGzHREWzesJbJ1w7Ay01jzruvsnZXEYGBvjicGk57
      B0//6ikU/zAqK6uJS0rHVFdGQ7uTux/+KYrVQpvJRGPNMZ77++uERvlQXlFH76HXctu4/rS2
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
