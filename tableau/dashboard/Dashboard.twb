<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='mac' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='pergunta2' inline='true' name='textscan.0rle2h21nou16v16yocpu1qr3g1u' version='9.3'>
      <connection class='textscan' directory='/Users/lucas/Documents/visualizacao de dados/VisualizacaoDados-TP1/file_converters' filename='pergunta2.csv' password='' server=''>
        <relation name='pergunta2.csv' table='[pergunta2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Universidade' ordinal='0' />
            <column datatype='integer' name='Ingressantes' ordinal='1' />
            <column datatype='integer' name='Concluintes' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Universidade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Universidade]</local-name>
            <parent-name>[pergunta2.csv]</parent-name>
            <remote-alias>Universidade</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ingressantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ingressantes]</local-name>
            <parent-name>[pergunta2.csv]</parent-name>
            <remote-alias>Ingressantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Concluintes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Concluintes]</local-name>
            <parent-name>[pergunta2.csv]</parent-name>
            <remote-alias>Concluintes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Concluintes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Ingressantes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Concluintes]' derivation='Sum' name='[sum:Concluintes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ingressantes]' derivation='Sum' name='[sum:Ingressantes:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ghapereira/vagrant/visdados/crawlerDataViva/tableau/pergunta2/pergunta2.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 03:21:42 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2016-05-14 15:21:42.157' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Concluintes</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Concluintes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Concluintes</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2354.0</statistic>
                <statistic aggregation='Avg' datatype='real'>235.40000000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>38</statistic>
                <statistic aggregation='Max' datatype='integer'>1126</statistic>
                <statistic aggregation='Stdev' datatype='real'>324.72354053529563</statistic>
                <statistic aggregation='StdevP' datatype='real'>308.05979938966397</statistic>
                <statistic aggregation='Var' datatype='real'>105445.37777777777</statistic>
                <statistic aggregation='VarP' datatype='real'>94900.839999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1503140.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ingressantes</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ingressantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ingressantes</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>264.0</statistic>
                <statistic aggregation='Avg' datatype='real'>26.399999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>186</statistic>
                <statistic aggregation='Stdev' datatype='real'>59.163051532748604</statistic>
                <statistic aggregation='StdevP' datatype='real'>56.126998850820449</statistic>
                <statistic aggregation='Var' datatype='real'>3500.2666666666669</statistic>
                <statistic aggregation='VarP' datatype='real'>3150.2399999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38472.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Universidade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Universidade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Universidade</remote-alias>
              <ordinal>3</ordinal>
              <family>pergunta2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Faculdade Candido Rondon De Campo Verde&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Instituto Superior De Educacao Do Sul Da Bahia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Faculdade Metodista Do Sul Paulista&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.457143' measure-ordering='alphabetic' measure-percentage='0.542857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pergunta3' inline='true' name='textscan.1bfqtza0nne550136o3o90w38zlo' version='9.3'>
      <connection class='textscan' directory='/Users/lucas/Documents/visualizacao de dados/VisualizacaoDados-TP1/file_converters' filename='pergunta3.csv' password='' server=''>
        <relation name='pergunta3.csv' table='[pergunta3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Universidade' ordinal='0' />
            <column datatype='integer' name='Ingressantes' ordinal='1' />
            <column datatype='integer' name='Concluintes' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Universidade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Universidade]</local-name>
            <parent-name>[pergunta3.csv]</parent-name>
            <remote-alias>Universidade</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ingressantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ingressantes]</local-name>
            <parent-name>[pergunta3.csv]</parent-name>
            <remote-alias>Ingressantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Concluintes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Concluintes]</local-name>
            <parent-name>[pergunta3.csv]</parent-name>
            <remote-alias>Concluintes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Concluintes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Ingressantes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Concluintes]' derivation='Sum' name='[sum:Concluintes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ingressantes]' derivation='Sum' name='[sum:Ingressantes:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ghapereira/vagrant/visdados/crawlerDataViva/tableau/pergunta3/pergunta3.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 05:15:37 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2016-05-14 17:15:37.461' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Concluintes</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Concluintes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Concluintes</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta3.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>472210.0</statistic>
                <statistic aggregation='Avg' datatype='real'>47221.0</statistic>
                <statistic aggregation='Min' datatype='integer'>7730</statistic>
                <statistic aggregation='Max' datatype='integer'>184730</statistic>
                <statistic aggregation='Stdev' datatype='real'>57599.090095050786</statistic>
                <statistic aggregation='StdevP' datatype='real'>54643.294756081465</statistic>
                <statistic aggregation='Var' datatype='real'>3317655179.7777777</statistic>
                <statistic aggregation='VarP' datatype='real'>2985889661.8000002</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>52157125028.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ingressantes</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Ingressantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ingressantes</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta3.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1475722.0</statistic>
                <statistic aggregation='Avg' datatype='real'>147572.20000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>19496</statistic>
                <statistic aggregation='Max' datatype='integer'>597556</statistic>
                <statistic aggregation='Stdev' datatype='real'>173706.97947072951</statistic>
                <statistic aggregation='StdevP' datatype='real'>164792.91017868457</statistic>
                <statistic aggregation='Var' datatype='real'>30174114716.844444</statistic>
                <statistic aggregation='VarP' datatype='real'>27156703245.16</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>489342574580.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Universidade</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Universidade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Universidade</remote-alias>
              <ordinal>3</ordinal>
              <family>pergunta3.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Centro Universitario Do Instituto De Ensino Superior Coc&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Universidade Tecnologica Federal Do Parana&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Universidade Do Grande Abc&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.457143' measure-ordering='alphabetic' measure-percentage='0.542857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Concluintes:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Ingressantes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pergunta4' inline='true' name='textscan.0rny50v08jfq4118wckdu1n53tdn' version='9.3'>
      <connection class='textscan' directory='/Users/ghapereira/vagrant/visdados/crawlerDataViva/file_converters' filename='pergunta4.csv' password='' server=''>
        <relation name='pergunta4.csv' table='[pergunta4#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Curso' ordinal='0' />
            <column datatype='integer' name='Entrantes' ordinal='1' />
            <column datatype='integer' name='Graduandos' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Curso</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Curso]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Curso</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entrantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entrantes]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Entrantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduandos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Graduandos]</local-name>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias>Graduandos</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta4.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Entrantes:qk]&quot;' value='Ingressantes' />
          <alias key='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Graduandos:qk]&quot;' value='Concluintes' />
        </aliases>
      </column>
      <column caption='INDEX()' datatype='integer' name='[Calculation_115545492808560642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ghapereira/vagrant/visdados/crawlerDataViva/tableau/pergunta4/pergunta4.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 05:39:26 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2016-05-14 17:39:26.028' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Curso</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Curso]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Curso</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta4.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Administração de agroindústria&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Saúde pública&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Gestão estratégica de empresas&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entrantes</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Entrantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entrantes</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta4.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>232.0</statistic>
                <statistic aggregation='Avg' datatype='real'>23.199999999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>2</statistic>
                <statistic aggregation='Max' datatype='integer'>96</statistic>
                <statistic aggregation='Stdev' datatype='real'>32.282778346632092</statistic>
                <statistic aggregation='StdevP' datatype='real'>30.626132632116644</statistic>
                <statistic aggregation='Var' datatype='real'>1042.1777777777777</statistic>
                <statistic aggregation='VarP' datatype='real'>937.96000000000004</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14762.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Graduandos</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Graduandos]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Graduandos</remote-alias>
              <ordinal>2</ordinal>
              <family>pergunta4.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>871.0</statistic>
                <statistic aggregation='Avg' datatype='real'>87.099999999999994</statistic>
                <statistic aggregation='Min' datatype='integer'>15</statistic>
                <statistic aggregation='Max' datatype='integer'>184</statistic>
                <statistic aggregation='Stdev' datatype='real'>68.539445252756138</statistic>
                <statistic aggregation='StdevP' datatype='real'>65.022226968937318</statistic>
                <statistic aggregation='Var' datatype='real'>4697.6555555555551</statistic>
                <statistic aggregation='VarP' datatype='real'>4227.8900000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>118143.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.435714' measure-ordering='alphabetic' measure-percentage='0.564286' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Graduandos:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Entrantes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pergunta5' inline='true' name='textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y' version='9.3'>
      <connection class='textscan' directory='/Users/ghapereira/vagrant/visdados/crawlerDataViva/file_converters' filename='pergunta5.csv' password='' server=''>
        <relation name='pergunta5.csv' table='[pergunta5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Curso' ordinal='0' />
            <column datatype='integer' name='Entrantes' ordinal='1' />
            <column datatype='integer' name='Graduandos' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Curso</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Curso]</local-name>
            <parent-name>[pergunta5.csv]</parent-name>
            <remote-alias>Curso</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entrantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entrantes]</local-name>
            <parent-name>[pergunta5.csv]</parent-name>
            <remote-alias>Entrantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduandos</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Graduandos]</local-name>
            <parent-name>[pergunta5.csv]</parent-name>
            <remote-alias>Graduandos</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta5.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ghapereira/vagrant/visdados/crawlerDataViva/tableau/pergunta5/pergunta5.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 06:03:32 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10' timestamp-start='2016-05-14 18:03:32.730' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Curso</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Curso]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Curso</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta5.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Agroecologia&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Transportes&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Formação de professor do ensino médio&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entrantes</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Entrantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entrantes</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta5.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>171605.0</statistic>
                <statistic aggregation='Avg' datatype='real'>17160.5</statistic>
                <statistic aggregation='Min' datatype='integer'>273</statistic>
                <statistic aggregation='Max' datatype='integer'>64030</statistic>
                <statistic aggregation='Stdev' datatype='real'>20017.045193478927</statistic>
                <statistic aggregation='StdevP' datatype='real'>18989.836451375773</statistic>
                <statistic aggregation='Var' datatype='real'>400682098.27777779</statistic>
                <statistic aggregation='VarP' datatype='real'>360613888.44999999</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6550966487.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Graduandos</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Graduandos]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Graduandos</remote-alias>
              <ordinal>2</ordinal>
              <family>pergunta5.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>54108.0</statistic>
                <statistic aggregation='Avg' datatype='real'>5410.8000000000002</statistic>
                <statistic aggregation='Min' datatype='integer'>22</statistic>
                <statistic aggregation='Max' datatype='integer'>28481</statistic>
                <statistic aggregation='Stdev' datatype='real'>8664.6196659493107</statistic>
                <statistic aggregation='StdevP' datatype='real'>8219.9799610461341</statistic>
                <statistic aggregation='Var' datatype='real'>75075633.955555558</statistic>
                <statistic aggregation='VarP' datatype='real'>67568070.560000002</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>968448272.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.457143' measure-ordering='alphabetic' measure-percentage='0.542857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Graduandos:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Entrantes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='pergunta6' inline='true' name='textscan.0a4rv9h0xonx8q1brdwya0g4rb1y' version='9.3'>
      <connection class='textscan' directory='/var/folders/m8/5f9fvnxd7pg5d2_qpgl7wv0w0000gn/T/tableau-temp/0okgkj80dxts9i1da96sx1rulmhj.twb Files/C:/Users/Rodrigo/Downloads' filename='pergunta6.csv' password='' server=''>
        <relation name='pergunta6.csv' table='[pergunta6#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='pt_BR' separator=','>
            <column datatype='integer' name='Ano' ordinal='0' />
            <column datatype='integer' name='Entrantes' ordinal='1' />
            <column datatype='integer' name='Graduates' ordinal='2' />
            <column datatype='integer' name='NumJobs' ordinal='3' />
            <column datatype='integer' name='DiferencaNumJobsAno' ordinal='4' />
            <column datatype='integer' name='DiferencaGraduatesJobs' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Ano</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ano]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>Ano</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entrantes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entrantes]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>Entrantes</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduates</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Graduates]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>Graduates</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NumJobs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NumJobs]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>NumJobs</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DiferencaNumJobsAno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DiferencaNumJobsAno]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>DiferencaNumJobsAno</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DiferencaGraduatesJobs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DiferencaGraduatesJobs]</local-name>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias>DiferencaGraduatesJobs</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pergunta6.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;R$&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;pt_BR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year' datatype='integer' hidden='true' name='[Ano]' role='measure' type='quantitative' />
      <column caption='Ano' datatype='date' name='[Calculation_520165771860164609]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([Ano],1,1)' />
      </column>
      <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
      <column caption='Graduados' datatype='integer' name='[Graduates]' role='measure' type='quantitative' />
      <column caption='Empregados' datatype='integer' name='[NumJobs]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Graduates]' derivation='Sum' name='[sum:Graduates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NumJobs]' derivation='Sum' name='[sum:NumJobs:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ghapereira/vagrant/visdados/crawlerDataViva/tableau/pergunta6/pergunta6.tde' schema='Extract' tablename='Extract' update-time='05/14/2016 10:47:18 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_520165771860164609]' formula='MAKEDATE([Ano],1,1)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2016-05-14 22:47:18.729' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Ano</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Ano]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ano</remote-alias>
              <ordinal>0</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10055.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2011.0</statistic>
                <statistic aggregation='Min' datatype='integer'>2009</statistic>
                <statistic aggregation='Max' datatype='integer'>2013</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5811388300841898</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.4142135623730951</statistic>
                <statistic aggregation='Var' datatype='real'>2.5</statistic>
                <statistic aggregation='VarP' datatype='real'>2.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>2011</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>20220615.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DiferencaGraduatesJobs</remote-name>
              <remote-type>3</remote-type>
              <local-name>[DiferencaGraduatesJobs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DiferencaGraduatesJobs</remote-alias>
              <ordinal>1</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>248570.0</statistic>
                <statistic aggregation='Avg' datatype='real'>49714.0</statistic>
                <statistic aggregation='Min' datatype='integer'>37432</statistic>
                <statistic aggregation='Max' datatype='integer'>79610</statistic>
                <statistic aggregation='Stdev' datatype='real'>17324.136962631066</statistic>
                <statistic aggregation='StdevP' datatype='real'>15495.17915998392</statistic>
                <statistic aggregation='Var' datatype='real'>300125721.5</statistic>
                <statistic aggregation='VarP' datatype='real'>240100577.19999999</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>45438</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13557911866.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DiferencaNumJobsAno</remote-name>
              <remote-type>3</remote-type>
              <local-name>[DiferencaNumJobsAno]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DiferencaNumJobsAno</remote-alias>
              <ordinal>2</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95392.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19078.400000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>-12469</statistic>
                <statistic aggregation='Max' datatype='integer'>32848</statistic>
                <statistic aggregation='Stdev' datatype='real'>18158.241580615675</statistic>
                <statistic aggregation='StdevP' datatype='real'>16241.22501044795</statistic>
                <statistic aggregation='Var' datatype='real'>329721737.30000001</statistic>
                <statistic aggregation='VarP' datatype='real'>263777389.84</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3138813682.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entrantes</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Entrantes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entrantes</remote-alias>
              <ordinal>3</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1040299.0</statistic>
                <statistic aggregation='Avg' datatype='real'>208059.79999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>190929</statistic>
                <statistic aggregation='Max' datatype='integer'>226274</statistic>
                <statistic aggregation='Stdev' datatype='real'>14996.624593554377</statistic>
                <statistic aggregation='StdevP' datatype='real'>13413.388809693097</statistic>
                <statistic aggregation='Var' datatype='real'>224898749.19999999</statistic>
                <statistic aggregation='VarP' datatype='real'>179918999.36000001</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>217343996877.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Graduates</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Graduates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Graduates</remote-alias>
              <ordinal>4</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>343962.0</statistic>
                <statistic aggregation='Avg' datatype='real'>68792.399999999994</statistic>
                <statistic aggregation='Min' datatype='integer'>65901</statistic>
                <statistic aggregation='Max' datatype='integer'>71022</statistic>
                <statistic aggregation='Stdev' datatype='real'>2279.3731155736659</statistic>
                <statistic aggregation='StdevP' datatype='real'>2038.7332930032806</statistic>
                <statistic aggregation='Var' datatype='real'>5195541.7999999998</statistic>
                <statistic aggregation='VarP' datatype='real'>4156433.4399999999</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>23682753656.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NumJobs</remote-name>
              <remote-type>3</remote-type>
              <local-name>[NumJobs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NumJobs</remote-alias>
              <ordinal>5</ordinal>
              <family>pergunta6.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1815144.0</statistic>
                <statistic aggregation='Avg' datatype='real'>363028.79999999999</statistic>
                <statistic aggregation='Min' datatype='integer'>330154</statistic>
                <statistic aggregation='Max' datatype='integer'>399962</statistic>
                <statistic aggregation='Stdev' datatype='real'>25848.608061170336</statistic>
                <statistic aggregation='StdevP' datatype='real'>23119.697899410363</statistic>
                <statistic aggregation='Var' datatype='real'>668150538.70000005</statistic>
                <statistic aggregation='VarP' datatype='real'>534520430.95999998</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>661622150302.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_520165771860164609</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Calculation_520165771860164609]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_520165771860164609</remote-alias>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2009-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2013-01-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.407332' measure-ordering='alphabetic' measure-percentage='0.592668' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[sum:Graduates:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[sum:Entrantes:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[sum:NumJobs:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Ano' />
        <field-sort-custom-order field='Calculation_520165771860164609' />
        <field-sort-custom-order field='Entrantes' />
        <field-sort-custom-order field='Graduates' />
        <field-sort-custom-order field='NumJobs' />
        <field-sort-custom-order field='DiferencaNumJobsAno' />
        <field-sort-custom-order field='DiferencaGraduatesJobs' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='pergunta2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>10 faculdades com maior diferença entre alunos ingressantes e concluintes no periodo (2009 - 2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta2' name='textscan.0rle2h21nou16v16yocpu1qr3g1u' />
          </datasources>
          <datasource-dependencies datasource='textscan.0rle2h21nou16v16yocpu1qr3g1u'>
            <column datatype='integer' name='[Concluintes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ingressantes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Universidade]' role='dimension' type='nominal' />
            <column-instance column='[Universidade]' derivation='None' name='[none:Universidade:nk]' pivot='key' type='nominal' />
            <column-instance column='[Concluintes]' derivation='Sum' name='[sum:Concluintes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ingressantes]' derivation='Sum' name='[sum:Ingressantes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[none:Universidade:nk]' direction='DESC' using='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[none:Universidade:nk]' value='19' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#babccf</color>
                <color>#aaadd4</color>
                <color>#989dd9</color>
                <color>#858cdf</color>
                <color>#727ae4</color>
                <color>#5d67e9</color>
                <color>#4754ef</color>
                <color>#303ff4</color>
                <color>#1829f9</color>
                <color>#0013ff</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='190' />
                <format attr='maxheight' value='190' />
                <format attr='minwidth' value='141' />
                <format attr='maxwidth' value='141' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0rle2h21nou16v16yocpu1qr3g1u].[none:Universidade:nk]</rows>
        <cols>([textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Concluintes:qk] + [textscan.0rle2h21nou16v16yocpu1qr3g1u].[sum:Ingressantes:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='pergunta3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>10 instituições de Ensino Superior com menor diferença entre ingressantes e concluintes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta3' name='textscan.1bfqtza0nne550136o3o90w38zlo' />
          </datasources>
          <datasource-dependencies datasource='textscan.1bfqtza0nne550136o3o90w38zlo'>
            <column datatype='integer' name='[Concluintes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ingressantes]' role='measure' type='quantitative' />
            <column datatype='string' name='[Universidade]' role='dimension' type='nominal' />
            <column-instance column='[Universidade]' derivation='None' name='[none:Universidade:nk]' pivot='key' type='nominal' />
            <column-instance column='[Concluintes]' derivation='Sum' name='[sum:Concluintes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ingressantes]' derivation='Sum' name='[sum:Ingressantes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Concluintes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Ingressantes:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Ingressantes:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Concluintes:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.1bfqtza0nne550136o3o90w38zlo].[none:Universidade:nk]' direction='DESC' using='[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Ingressantes:qk]' />
          <slices>
            <column>[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.1bfqtza0nne550136o3o90w38zlo].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1bfqtza0nne550136o3o90w38zlo].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]' value='39' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1bfqtza0nne550136o3o90w38zlo].[Multiple Values]</rows>
        <cols>([textscan.1bfqtza0nne550136o3o90w38zlo].[none:Universidade:nk] / [textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='pergunta4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>10 cursos com menor diferença no número de ingressantes e concluintes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta4' name='textscan.0rny50v08jfq4118wckdu1n53tdn' />
          </datasources>
          <datasource-dependencies datasource='textscan.0rny50v08jfq4118wckdu1n53tdn'>
            <column datatype='string' name='[Curso]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
            <column-instance column='[Curso]' derivation='None' name='[none:Curso:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Entrantes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0rny50v08jfq4118wckdu1n53tdn].[sum:Graduandos:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gestão estratégica de empresas&quot;</bucket>
              <bucket>&quot;Gestão da produção&quot;</bucket>
              <bucket>&quot;Gestão de serviços&quot;</bucket>
              <bucket>&quot;Materiais de construção (produção e utilização)&quot;</bucket>
              <bucket>&quot;Administração de agroindústria&quot;</bucket>
              <bucket>&quot;Inspeção escolar&quot;</bucket>
              <bucket>&quot;Política social&quot;</bucket>
              <bucket>&quot;Gestão de recursos de informática&quot;</bucket>
              <bucket>&quot;Saúde pública&quot;</bucket>
              <bucket>&quot;Formação de professor de pré-escola&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[textscan.0rny50v08jfq4118wckdu1n53tdn].[Multiple Values]' value='64' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0rny50v08jfq4118wckdu1n53tdn].[Multiple Values]</rows>
        <cols>([textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk] / [textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='pergunta5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Os 10 cursos com menor diferença no número de ingressantes e concluintes no período (2009 - 2013)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta5' name='textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y' />
          </datasources>
          <datasource-dependencies datasource='textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y'>
            <column datatype='string' name='[Curso]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Entrantes]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Graduandos]' role='measure' type='quantitative' />
            <column-instance column='[Curso]' derivation='None' name='[none:Curso:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entrantes]' derivation='Sum' name='[sum:Entrantes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Graduandos]' derivation='Sum' name='[sum:Graduandos:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Entrantes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Graduandos:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[none:Curso:nk]' direction='DESC' using='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[sum:Entrantes:qk]' />
          <slices>
            <column>[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[Multiple Values]</rows>
        <cols>([textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[none:Curso:nk] / [textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='pergunta6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Empregados e graduados na área de computação por ano</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='pergunta6' name='textscan.0a4rv9h0xonx8q1brdwya0g4rb1y' />
          </datasources>
          <datasource-dependencies datasource='textscan.0a4rv9h0xonx8q1brdwya0g4rb1y'>
            <column caption='Year' datatype='integer' hidden='true' name='[Ano]' role='measure' type='quantitative' />
            <column caption='Ano' datatype='date' name='[Calculation_520165771860164609]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Ano],1,1)' />
            </column>
            <column caption='Graduados' datatype='integer' name='[Graduates]' role='measure' type='quantitative' />
            <column caption='Empregados' datatype='integer' name='[NumJobs]' role='measure' type='quantitative' />
            <column-instance column='[Graduates]' derivation='Sum' name='[sum:Graduates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NumJobs]' derivation='Sum' name='[sum:NumJobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_520165771860164609]' derivation='Year-Trunc' name='[tyr:Calculation_520165771860164609:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[sum:Graduates:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[sum:NumJobs:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[Multiple Values]' scope='rows' value='Número de pessoas' />
            <format attr='subtitle' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]' scope='cols' value='Ano' />
            <format attr='subtitle' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]' scope='cols' value='true' />
            <format attr='height' field='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Ano:&#9;</run>
                <run bold='true'>&lt;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;&lt;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]&gt;:&#9;</run>
                <run bold='true'>&lt;[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[Multiple Values]</rows>
        <cols>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[tyr:Calculation_520165771860164609:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='35000' id='1' name='pergunta2' show-title='true' w='43300' x='0' y='0' />
              <zone h='35000' id='7' name='pergunta3' show-title='true' w='40700' x='43300' y='0' />
              <zone h='33375' id='9' name='pergunta4' show-title='true' w='44400' x='0' y='66625' />
              <zone h='33375' id='11' name='pergunta5' show-title='true' w='39600' x='44400' y='66625' />
              <zone h='31625' id='13' name='pergunta6' show-title='true' w='84000' x='0' y='35000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8375' id='6' name='pergunta2' pane-specification-id='1' param='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]' type='color' w='16000' x='84000' y='0' />
              <zone h='7875' id='14' name='pergunta6' pane-specification-id='1' param='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]' type='color' w='16000' x='84000' y='8375' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='108'>
    <window class='worksheet' name='pergunta2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]</field>
            <field>[textscan.0rle2h21nou16v16yocpu1qr3g1u].[none:Universidade:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='pergunta3'>
      <cards>
        <edge name='left'>
          <strip size='197'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]</field>
            <field>[textscan.1bfqtza0nne550136o3o90w38zlo].[none:Universidade:nk]</field>
            <field>[textscan.1bfqtza0nne550136o3o90w38zlo].[sum:Ingressantes:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='pergunta4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]</field>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Calculation_115545492808470529:qk]</field>
            <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[none:Curso:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='pergunta5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]</field>
            <field>[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[none:Curso:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='pergunta6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]</field>
            <field>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[yr:Calculation_520165771860164609:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='pergunta2'>
          <highlight>
            <color-one-way>
              <field>[textscan.0rle2h21nou16v16yocpu1qr3g1u].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pergunta3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1bfqtza0nne550136o3o90w38zlo].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pergunta4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0rny50v08jfq4118wckdu1n53tdn].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pergunta5'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.1ghl3fh0q8sxoe19fncdu1ho6x6y].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='pergunta6'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0a4rv9h0xonx8q1brdwya0g4rb1y].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='pergunta2' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='pergunta3' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='pergunta4' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='pergunta5' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='pergunta6' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      /H9e4p0LhaIEnAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
